---
import { Image, getImage } from 'astro:assets';

import { LinkButton } from './Button';

import hamburgerIcon from '../assets/icon-hamburger.svg';
import closeIcon from '../assets/icon-close.svg';

import sidebarBgImg from '../assets/bg-pattern-about-1-mobile-nav-1.svg';

const { links } = Astro.props;
const baseURL = import.meta.env.BASE_URL;
const sidebarBottomBg = await getImage({ src: sidebarBgImg });

---
<div class="navtarget">
  <Image class="navtarget__icon" src={hamburgerIcon} alt="mobile nav icon" loading="eager" /> 
  <label class="navtarget__label sr-only" for="sidebar-toggle">sidebar toggle</label>
  <input class="navtarget__toggle" type="checkbox" name="sidebar-toggle" id="sidebar-toggle" />
  <aside class="navtarget__sidebar" style={`background-image: url(${sidebarBottomBg.src})`}>
    <Image class="sidebar__icon" src={closeIcon} alt="mobile nav icon" loading="lazy" />
    <nav class="sidebar__nav">
      <ol class="nav__list">
        {links.map(({url, label}) => (url === 'contact' ? (<li class="nav__link"><LinkButton url={`${baseURL}${url}`} customStyle={{ padding: '10px 30px' }}>{label}</LinkButton></li>) : (<li class="nav__link"><a href={`${baseURL}${url}`}>{label}</a></li>)))}
      </ol>
    </nav>
  </aside>
  <div class="sidebar__opacity"></div>
</div>
<style>
  .navtarget {
    z-index: 1;
  }

  .navtarget__icon, .navtarget__toggle {
    width: 20px;
  }
  
  .navtarget__icon {
    height: 17px;
  }

  .navtarget__label {
    width: 0;
    height: 0;
  }
  
  .navtarget__toggle {
    appearance: none;
    height: 25px;
    cursor: pointer;
    z-index: 3;
    position: absolute;
    top: 42px;
    right: 35px;
  }
  
  .navtarget__sidebar {
    display: none;
    background-repeat: no-repeat;
    background-position: bottom right -100px;
    padding: 25px;
    overflow-x: hidden;
  }
  
  .navtarget__toggle:checked {
    position: fixed;
  }
  
  .navtarget__toggle:checked + .navtarget__sidebar {
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    right: 0;
    width: 68%;
    height: 100vh;
    background-color: var(--police-blue);
    z-index: 2;
  }
  
  .sidebar__icon {
    display: flex;
    flex-direction: row;
    align-self: flex-end;
    margin-right: 10px;
    margin-top: 20px;
  }
  
  .navtarget__toggle:checked ~ .sidebar__opacity {
    background-color: rgba(0 0 0 / 60%);
    position: fixed;
    width: 100%;
    height: 100vh;
    top: 0;
    left: 0;
    z-index: 1;
  }
  
  .nav__list {
    list-style-type: none;
  }
  
  .sidebar__nav {
    padding: 25px 20px;
  }
  
  .nav__link {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--white);
  }
  
  .nav__link:hover {
    color: var(--light-coral);
  }
  
  .sidebar__nav .nav__list > .nav__link {
    margin: 35px 0;
  }
  
  .sidebar__nav .nav__list > .nav__link:last-child {
    margin: 55px 0;
  }
  
  @media (--md-viewport) {    
    .navtarget {
      display: none;
    }
  }
</style>
<script>
  // Resets toggled state
  window.addEventListener('resize', reset);

  function reset () {
    const sidebar = document.querySelector('.navtarget__toggle');
    if (window.innerWidth >= 768 && sidebar && sidebar.checked) {
      sidebar.checked = false;
    }
  }
</script>
